@using Microsoft.AspNetCore.Identity
@using Witter.Data.Models
@using Witter.Services.Data.Contracts
@model Witter.Web.ViewModels.Profile.ProfileViewModel
@inject UserManager<ApplicationUser> UserManager
@inject IFollowerService followerService
@inject ILikeService likeService
@{
    ViewBag.Title = "Profile - (@" + @Model.UserName + ")";
}
<div class="container">
    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-6 pb-4 border-bottom">
            <div class="well well-sm">
                <div class="row justify-content-between">
                    <div class="col">
                        <img src="https://via.placeholder.com/150" alt="" class="img-rounded img-responsive" />
                    </div>
                    <div class="col">
                        <h4>
                            @Model.UserName
                        </h4>
                        <small>
                            <cite title="San Francisco, USA">
                                San Francisco, USA <i class="glyphicon glyphicon-map-marker">
                                </i>
                            </cite>
                        </small>
                        <p>
                            <i class="glyphicon glyphicon-envelope"></i>@Model.UserName@@test.com
                            <br />
                            <span>Created On:</span>
                            <i class="glyphicon glyphicon-gift"></i>@TimeZoneInfo.ConvertTimeFromUtc(Model.CreatedOn, TimeZoneInfo.Local)
                        </p>
                        @if (this.UserManager.GetUserAsync(this.User).Result.Id != @Model.Id)
                        {
                            @if (!this.followerService.IsFollowing(this.UserManager.GetUserAsync(this.User).Result.Id, @Model.Id))
                            {
                                <a asp-controller="Profile" asp-action="Follow" asp-route-Id="@Model.Id" asp-route-returnUrl="@this.Context.Request.Path.Value" class="btn btn-success">Follow</a>
                            }
                            else
                            {
                                <a asp-controller="Profile" asp-action="UnFollow" asp-route-Id="@Model.Id" asp-route-returnUrl="@this.Context.Request.Path.Value" class="btn btn-danger">UnFollow</a>
                            }
                        }
                        else
                        {
                            <a asp-controller="Settings" asp-action="index" class="btn btn-warning">Settings</a>
                        }
                    </div>
                    <div class="col">
                        <p class="mb-0">Followers:</p>
                        <small>@Model.FollowersCount</small>
                        <p class="mb-0">Following:</p>
                        <small>@Model.FollowingCount</small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*Check if profile is mine*@

    @if (this.User.Identity.IsAuthenticated)
    {
        <div class="border-bottom">
            <form method="post" asp-controller="Weets" asp-action="Create">
                <label for="weet">Weet</label>
                <input type="text" class="form-control" name="Content" placeholder="Weet here">
                <input type="text" name="returnUrl" value="@this.Context.Request.Path.Value" hidden />
                <button type="submit" class="btn btn-primary m-2">Submit</button>
            </form>
        </div>
    }

    @if (!Model.Weets.Any())
    {
        <h3 class="text-center mt-3">You don't have any posts.</h3>
    }
    else
    {
        @foreach (var weet in Model.Weets.OrderByDescending(x => x.CreatedOn))
        {
            <partial name="_WeetPartial" model="weet"/>
        }
    }
</div>